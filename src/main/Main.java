package main;

import java.sql.ResultSet;
import java.sql.SQLException;
<<<<<<< HEAD
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
=======
>>>>>>> b4022d74de2ae3cf102b49382e57b3a2e44da021
import java.sql.Connection;
import java.sql.Statement;
import java.util.ArrayList;

import crypto.abe.api.Server;
import databaseAccess.DBConnection;
import sdm.*;

public class Main {

	public static void main(String[] args) throws SQLException {
		// TODO Auto-generated method stub
		System.out.println("SDM Project");
		Server server = new Server();

		server.setMasterKey(
				"{\"MK\":\"RQAAABQdGaZYCNMHYVTsd163+DJQVOEsX0UAAACAQ7sxText4hQGbA2nnf+geYfVPWZi9Nyx3Hu7u91qlo0saEi1HkbpjXiJDzaMeVM4pKzwlEkHBCQLh2+d8vSElHNCOhkcOaReOET2BnAWvYkOc7FVAvxeKryeb5+40pWylP8KauqfiOVxwyoirqk97EYzSz5b3kFufR4rApSj2pU=\"}");
		server.setPublicKey(
				"{\"PK\":\"RQAAAIAJvAAqxjQ1pW2KBQp7gk1vYxM1vd7qSlCkOZVVnOP1RRiR+lPHfnbKPnPxKbB3vyjiLOHWQstjavAdmqW0ZcmaIndhMmubp+DdPDmRhu0HNtReoxPpT32mKnkfocwJZmK3q+deDCRvIwgVomLhBFMnfklafLeoSuF2BgrJ7kJR4EUAAACAR2fla9W32K5eJs1Tu1OcPvrGVsuu2ikyH4UToq5Hwrjz2iEbrE2B7phmMzHtFJITuY823MkBU5M7/Qp06oUxDQebW6YnYe6/NI9rYIGuPPA0tRPh5KfDfPkswAtiVq1K9Ypmv++r0hh3XalT1nubxvCJslfPDDqZ64kQc1fuuStFAAAAgDYJFBA7+vTiRFDH+V4XW87nCntw78GQFE2cNGQnsUpmMYq8JHAMQb6P4DehiSFBb9dUXvIukgY539SWaypV7+IECmFJd6/lYoSfzmqzbCYTZJcop7v57EhTWy6gznmZAi2oIT+ptmnyxY5MWXONQOPiK7zQSfCw9zB77E3T4q6ZRQAAAICbI5xrtHE9qV5Bip9K4xHk6TlVAmK2UGi2DOZ/jyvgYY5aSnLmq5bFQHyc14DK0zDxwnGIa16kynThtZE6f9O6epJuDRaXxMZEz5hm8KfNAjII91BA16pNiFOZfZfKw/9rPptQN6E35LAkEbL4Mm0KoxI4ut1NHmdtDE7acmJijQ==\"}");

		Person p1 = new Person(1, "Name1");
		Person p2 = new Person(2, "Name2");
		Person p3 = new Person(3, "Name3");
		Person p4 = new Person(4, "Name4");
		Person p5 = new Person(5, "Name5");
		Person p6 = new Person(6, "Name6");
		Person p7 = new Person(7, "Name7");
		Person p8 = new Person(8, "Name8");
		Person p9 = new Person(9, "Name9");
		Person p10 = new Person(10, "Name10");
		Person p11 = new Person(11, "Name11");
		Person p12 = new Person(12, "Name12");
		Person p13 = new Person(13, "Name13");
		Person p14 = new Person(14, "Name14");
		Person p15 = new Person(15, "Name15");
		Person p16 = new Person(16, "Name16");
		Person p17 = new Person(17, "Name17");
		Person p18 = new Person(18, "Name18");
		/*
		 * p1.setAttrs(new String[] { "id1", "employee", "Company1" });
		 * p2.setAttrs(new String[] { "id2", "employee", "Company2" });
		 * p3.setAttrs(new String[] { "id3", "employee", "HealthClub1" });
		 * p4.setAttrs(new String[] { "id4", "employee", "HealthClub2" });
		 * p5.setAttrs(new String[] { "id5", "employee", "Insurance1" });
		 * p6.setAttrs(new String[] { "id6", "employee", "Insurance2" });
		 * p7.setAttrs(new String[] { "id7", "employer", "Company1" });
		 * p8.setAttrs(new String[] { "id8", "employer", "Company2" });
		 * p9.setAttrs(new String[] { "id9", "employer", "HealthClub1" });
		 * p10.setAttrs(new String[] { "id10", "employer", "HealthClub2" });
		 * p11.setAttrs(new String[] { "id11", "employer", "Insurance1" });
		 * p12.setAttrs(new String[] { "id12", "employer", "Insurance2" });
		 * p13.setAttrs(new String[] { "id13", "doctor", "Hospital1" });
		 * p14.setAttrs(new String[] { "id14", "doctor", "Hospital2" });
		 * p15.setAttrs(new String[] { "id15", "doctor", "Hospital3" });
		 * p16.setAttrs(new String[] { "id16", "nurse", "Hospital1" });
		 * p17.setAttrs(new String[] { "id17", "nurse", "Hospital2" });
		 * p18.setAttrs(new String[] { "id18", "nurse", "Hospital3" });
		 */
		String PKJSONString = server.getPublicKeyInString();

		p1.setPK(PKJSONString);

		p2.setPK(PKJSONString);
		p3.setPK(PKJSONString);
		p4.setPK(PKJSONString);
		p5.setPK(PKJSONString);
		p6.setPK(PKJSONString);
		p7.setPK(PKJSONString);
		p8.setPK(PKJSONString);
		p9.setPK(PKJSONString);
		p10.setPK(PKJSONString);
		p11.setPK(PKJSONString);
		p12.setPK(PKJSONString);
		p13.setPK(PKJSONString);
		p14.setPK(PKJSONString);
		p15.setPK(PKJSONString);
		p16.setPK(PKJSONString);
		p17.setPK(PKJSONString);
		p18.setPK(PKJSONString);
		/*
		 * String SKJSONString = server.generateSecretKey(p1.getAttrs());
		 * System.out.println(SKJSONString); SKJSONString =
		 * server.generateSecretKey(p2.getAttrs());
		 * System.out.println(SKJSONString); SKJSONString =
		 * server.generateSecretKey(p3.getAttrs());
		 * System.out.println(SKJSONString); SKJSONString =
		 * server.generateSecretKey(p4.getAttrs());
		 * System.out.println(SKJSONString); SKJSONString =
		 * server.generateSecretKey(p5.getAttrs());
		 * System.out.println(SKJSONString); SKJSONString =
		 * server.generateSecretKey(p6.getAttrs());
		 * System.out.println(SKJSONString); SKJSONString =
		 * server.generateSecretKey(p7.getAttrs());
		 * System.out.println(SKJSONString); SKJSONString =
		 * server.generateSecretKey(p8.getAttrs());
		 * System.out.println(SKJSONString); SKJSONString =
		 * server.generateSecretKey(p9.getAttrs());
		 * System.out.println(SKJSONString); SKJSONString =
		 * server.generateSecretKey(p10.getAttrs());
		 * System.out.println(SKJSONString); SKJSONString =
		 * server.generateSecretKey(p11.getAttrs());
		 * System.out.println(SKJSONString); SKJSONString =
		 * server.generateSecretKey(p12.getAttrs());
		 * System.out.println(SKJSONString); SKJSONString =
		 * server.generateSecretKey(p13.getAttrs());
		 * System.out.println(SKJSONString); SKJSONString =
		 * server.generateSecretKey(p14.getAttrs());
		 * System.out.println(SKJSONString); SKJSONString =
		 * server.generateSecretKey(p15.getAttrs());
		 * System.out.println(SKJSONString); SKJSONString =
		 * server.generateSecretKey(p16.getAttrs());
		 * System.out.println(SKJSONString); SKJSONString =
		 * server.generateSecretKey(p17.getAttrs());
		 * System.out.println(SKJSONString); SKJSONString =
		 * server.generateSecretKey(p18.getAttrs());
		 * System.out.println(SKJSONString);
		 */
		p1.setSK("{\"SK\":\"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\"}");
		p2.setSK("{\"SK\":\"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\"}");
		p3.setSK("{\"SK\":\"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\"}");
		p4.setSK("{\"SK\":\"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\"}");
		p5.setSK("{\"SK\":\"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\"}");
		p6.setSK("{\"SK\":\"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\"}");
		p7.setSK("{\"SK\":\"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\"}");
		p8.setSK("{\"SK\":\"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\"}");
		p9.setSK("{\"SK\":\"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\"}");
		p10.setSK("{\"SK\":\"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\"}");
		p11.setSK("{\"SK\":\"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\"}");
		p12.setSK("{\"SK\":\"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\"}");
		p13.setSK("{\"SK\":\"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\"}");
		p14.setSK("{\"SK\":\"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\"}");
		p15.setSK("{\"SK\":\"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\"}");
		p16.setSK("{\"SK\":\"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\"}");
		p17.setSK("{\"SK\":\"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\"}");
p18.setSK("{\"SK\":\"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\"}");
		
		p1.insertBasicInfoDB("Name1", "1992/05/06", "Tours_FR", "Female", "French", "A str 2, Enschede", "003363215648");
		p1.readHealthClubVisitDB(1);
		p1.startGUI();
		
		/*
		 * p1.policies.setBIReadingPolicy("id1");
		 * p2.policies.setBIReadingPolicy("id2");
		 * p3.policies.setBIReadingPolicy("id3");
		 * p4.policies.setBIReadingPolicy("id4");
		 * p5.policies.setBIReadingPolicy("id5");
		 * p6.policies.setBIReadingPolicy("id6");
		 * p7.policies.setBIReadingPolicy("id7");
		 * p8.policies.setBIReadingPolicy("id8");
		 * p9.policies.setBIReadingPolicy("id9");
		 * p10.policies.setBIReadingPolicy("id10");
		 * p11.policies.setBIReadingPolicy("id11");
		 * p12.policies.setBIReadingPolicy("id12");
		 * p13.policies.setBIReadingPolicy("id13");
		 * p14.policies.setBIReadingPolicy("id14");
		 * p15.policies.setBIReadingPolicy("id15");
		 * p16.policies.setBIReadingPolicy("id16");
		 * p17.policies.setBIReadingPolicy("id17");
		 * p18.policies.setBIReadingPolicy("id18");
		 * 
		 * p1.insertBasicInfoDB("Name1", "1992/05/06", "Tours_FR", "Female",
		 * "French", "A str 2, Enschede", "003363215648");
		 * p2.insertBasicInfoDB("Name2", "1975/04/30", "Blois_FR", "Male",
		 * "French", "B str 5, Enschede", "003361548925");
		 * p3.insertBasicInfoDB("Name3", "1985/12/24", "Lignieres_FR", "Female",
		 * "French", "C str 1, Enschede", "0033754136859");
		 * p4.insertBasicInfoDB("Name4", "1979/08/31", "Timisoara_RO", "Male",
		 * "Romanian", "D str 9, Enschede", "003156954625");
		 * p5.insertBasicInfoDB("Name5", "1999/04/15", "Arad_RO", "Female",
		 * "Romanian", "E str 10, Enschede", "005415468295");
		 * p6.insertBasicInfoDB("Name6", "1994/03/19", "Dublin_IE", "Male",
		 * "Irish", "F str 65, Enschede", "0031569842");
		 * p7.insertBasicInfoDB("Name7", "1989/03/01", "Belfast_UK", "Female",
		 * "Dutch", "G str 15, Enschede", "0048615973325");
		 * p8.insertBasicInfoDB("Name8", "1979/06/29", "London_UK", "Male",
		 * "French", "H str 86, Enschede", "00154685265");
		 * p9.insertBasicInfoDB("Name9", "1983/12/12", "Valencia_SP", "Female",
		 * "Spanish", "I str 2, Enschede", "001549535452");
		 * p10.insertBasicInfoDB("Name10", "1985/11/16", "Enschede_NL", "Male",
		 * "Dutch", "J str 64, Enschede", "0031578952146");
		 * p11.insertBasicInfoDB("Name11", "1991/12/19", "Utrecht_NL", "Female",
		 * "Dutch", "K str 95, Enschede", "001349824556");
		 * p12.insertBasicInfoDB("Name12", "1975/04/30", "Trento_IT", "Male",
		 * "Italian", "L str 2, Enschede", "00124588635");
		 * p13.insertBasicInfoDB("Name13", "1985/12/24", "Berlin_D", "Female",
		 * "German", "M str 4, Enschede", "001548214589982");
		 * p14.insertBasicInfoDB("Name14", "1979/08/31", "Barcelona_SP", "Male",
		 * "Dutch", "N str 6, Enschede", "00135424896248");
		 * p15.insertBasicInfoDB("Name15", "1979/06/29", "Amsterdam_NL",
		 * "Female", "Dutch", "O str 54, Enschede", "004521688524");
		 * p16.insertBasicInfoDB("Name16", "1983/12/12", "LosAngeles_US",
		 * "Male", "Dutch", "P str 98, Enschede", "00457954599");
		 * p17.insertBasicInfoDB("Name17", "1985/11/16", "Genova_IT", "Female",
		 * "Italian", "Q str 3, Enschede", "001751465588");
		 * p18.insertBasicInfoDB("Name18", "1979/08/31", "Rome_IT", "Male",
		 * "Italian", "R str 2, Enschede", "0016885547995");
		 */
		/*
		 * p1.policies.setBHIReadingPolicy("id1");
		 * p2.policies.setBHIReadingPolicy("id2");
		 * p3.policies.setBHIReadingPolicy("id3");
		 * p4.policies.setBHIReadingPolicy("id4");
		 * p5.policies.setBHIReadingPolicy("id5");
		 * p6.policies.setBHIReadingPolicy("id6");
		 * p7.policies.setBHIReadingPolicy("id7");
		 * p8.policies.setBHIReadingPolicy("id8");
		 * p9.policies.setBHIReadingPolicy("id9");
		 * p10.policies.setBHIReadingPolicy("id10");
		 * p11.policies.setBHIReadingPolicy("id11");
		 * p12.policies.setBHIReadingPolicy("id12");
		 * p13.policies.setBHIReadingPolicy("id13");
		 * p14.policies.setBHIReadingPolicy("id14");
		 * p15.policies.setBHIReadingPolicy("id15");
		 * p16.policies.setBHIReadingPolicy("id16");
		 * p17.policies.setBHIReadingPolicy("id17");
		 * p18.policies.setBHIReadingPolicy("id18");
		 * 
		 * p1.insertBasicHealthInfoDB(1,"O+","65","173","0031245685",13);
		 * p2.insertBasicHealthInfoDB(2,"A+","68","179","0031599645254",14);
		 * p3.insertBasicHealthInfoDB(3,"B+","75","175","00759648213",15);
		 * p4.insertBasicHealthInfoDB(4,"AB+","83","183","00154632879",13);
		 * p5.insertBasicHealthInfoDB(5,"O-","75","179","00854697213",14);
		 * p6.insertBasicHealthInfoDB(6,"A-","69","150","00164527893",15);
		 * p7.insertBasicHealthInfoDB(7,"B-","73","159","00852164973",13);
		 * p8.insertBasicHealthInfoDB(8,"AB-","71","171","00648521397",14);
		 * p9.insertBasicHealthInfoDB(9,"A+","93","180","00789654321",15);
		 * p10.insertBasicHealthInfoDB(10,"B+","89","186","00152483679",13);
		 * p11.insertBasicHealthInfoDB(11,"A+","85","175","00921365478",14);
		 * p12.insertBasicHealthInfoDB(12,"B+","94","200","00859631427",15);
		 * p13.insertBasicHealthInfoDB(13,"AB+","75","185","00721698534",14);
		 * p14.insertBasicHealthInfoDB(14,"O+","80","190","00621853479",15);
		 * p15.insertBasicHealthInfoDB(15,"A-","85","192","00648539217",13);
		 * p16.insertBasicHealthInfoDB(16,"B-","59","165","00521698347",13);
		 * p17.insertBasicHealthInfoDB(17,"A-","64","174","00126547893",14);
		 * p18.insertBasicHealthInfoDB(18,"A+","60","175","00850164392",15);
		 */
		/*
		 * p1.addHealthClubVisitsDB(1,1,"2018/10/31","1 h","cardio","good","");
		 * p2.addHealthClubVisitsDB(2,2,"2018/10/31","1 h","cardio","good","");
		 * p3.addHealthClubVisitsDB(3,3,"2018/11/01","1 h 30 m","swimming",
		 * "good", ""); p4.addHealthClubVisitsDB(4,4,"2018/11/01","1 h"
		 * ,"treadmill","very good" ,"");
		 * p5.addHealthClubVisitsDB(5,5,"2018/11/02","45 m","weight lifting"
		 * ,"bad","hurt themselves during class");
		 * p13.addHealthClubVisitsDB(13,13,"2018/11/02","1 h","squash","none",""
		 * );
		 * p14.addHealthClubVisitsDB(14,14,"2018/11/02","2 h","cycling","good",
		 * "");
		 * p15.addHealthClubVisitsDB(15,15,"2018/11/03","1 h","aerobics","good",
		 * "") ;
		 * p16.addHealthClubVisitsDB(16,16,"2018/11/03","1 h","sauna","good","")
		 * ; p17.addHealthClubVisitsDB(17,17,"2018/11/04","1 h 45 m","boxing",
		 * "bad","hurt themselves during class");
		 * p18.addHealthClubVisitsDB(18,18,"2018/11/05","1 h","cycling","none",
		 * "");
		 * p1.addHealthClubVisitsDB(1,1,"2018/11/06","2 h","cardio","none","");
		 * p2.addHealthClubVisitsDB(2,2,"2018/11/08","2 h","weight lifting"
		 * ,"bad","hurt themselves during class");
		 * p3.addHealthClubVisitsDB(3,3,"2018/11/08","2 h","boxing","good","");
		 * p4.addHealthClubVisitsDB(4,4,"2018/11/08","1 h 45 m","swimming",
		 * "good", "");
		 * p5.addHealthClubVisitsDB(5,5,"2018/11/08","2 h","treadmills","good",
		 * "") ;
		 */
		/*
		 * p1.policies.
		 * setMVReadingPolicy("id1 OR Hospital1 OR Hospital3 OR ( doctor AND ( id13 OR id15 ) ) OR Insurance6"
		 * ); p2.policies.
		 * setMVReadingPolicy("id2 OR Hospital2 OR Hospital1 OR ( doctor AND ( id15 OR id14 ) )"
		 * ); p3.policies.
		 * setMVReadingPolicy("id3 OR Hospital2 OR Hospital3 OR ( doctor AND ( id15 OR id13 ) )"
		 * ); p4.policies.
		 * setMVReadingPolicy("id4 OR Hospital2 OR ( doctor AND ( id15 OR id13 ) )"
		 * ); p5.policies.
		 * setMVReadingPolicy("id5 OR Hospital1 OR ( doctor AND ( id15 OR id14 ) )"
		 * ); p6.policies.
		 * setMVReadingPolicy("id6 OR Hospital2 OR ( doctor AND id15 )");
		 * 
		 * p1.addMedicalVisitDB(1,"2018/10/31","2018/10/31",
		 * "Allergies","allergic reaction to peanut",1);
		 * p2.addMedicalVisitDB(2,"2018/10/31","2018/10/31",
		 * "Anxiety","has seen a psychatrist",2);
		 * p3.addMedicalVisitDB(3,"2018/10/31","2018/11/01","Asthma","-",3);
		 * p4.addMedicalVisitDB(4,"2018/11/01","2018/11/01","Atopic eczema"
		 * ,"prescribed medicine",4);
		 * p5.addMedicalVisitDB(5,"2018/11/01","2018/11/05",
		 * "Appendicitis","surgery performed",5);
		 * p6.addMedicalVisitDB(6,"2018/11/02","2018/11/08",
		 * "Psoriasis","prescribed medicine",4);
		 * p1.addMedicalVisitDB(1,"2018/11/02","2018/11/02","Chest pain"
		 * ,"false alarm",3);
		 * p2.addMedicalVisitDB(2,"2018/11/02","2018/11/02","Common cold"
		 * ,"need rest, prescribed medicine",2);
		 * p3.addMedicalVisitDB(3,"2018/11/03","2018/11/03",
		 * "Influenza","need rest, prescribed medicine",1);
		 * p2.addMedicalVisitDB(2,"2018/11/03","2018/11/09","Meningitis",
		 * "antibiotic",5); p1.addMedicalVisitDB(1,"2018/11/05","2018/11/05",
		 * "Lupus","starting; prescribed medicine",1);
		 */
		/*
		 * p1.addMedicineDB(1,"epinephrine", "when needed", "-", "-", 1);
		 * p3.addMedicineDB(3,"Ventolin HFA", "when needed", "-", "-", 3);
		 * p4.addMedicineDB(4,"Cream", "morning and night", "2018/11/01",
		 * "2018/12/01", 4); p6.addMedicineDB(6,"Cream", "morning and night",
		 * "2018/11/01", "2018/12/01", 6); p2.addMedicineDB(2,"Aspirin",
		 * "max 4 a day", "2018/11/02", "2018/11/05", 8);
		 * p3.addMedicineDB(3,"Ibuprofen", "max 3 a day", "2018/11/03",
		 * "2018/11/08", 9); p2.addMedicineDB(2,"antibiotic", "every 12 hours",
		 * "2018/11/03", "2018/11/10", 10);
		 * p1.addMedicineDB(1,"Corticosteroids", "1 mg/kg/day", "2018/11/05",
		 * "2018/11/15", 11);
		 */

		// System.out.println(p2.readMedicineDB(1));

		// p1.setSK(SKJSONString);
		// String SKJSONString = server.generateSecretKey(p1.getAttrs());
		// System.out.println(SKJSONString);
		// p1.setSK("{\"SK\":\"RQAAAIA4dsg5bZFfmhivOeGwdvoUrLfFTCUy83iXxJ0sPblxaRCrFhHsBe5mwZCEytlGE6xj7OjztN17yha4M+GUxT3/andNtMj8qWBKJdIgJvHQONbBYjYPjoJVjg6BZNoDCKQ11CD5yD3iulJ9fX42/4UTxLVBYuG7rtfj7XYLcmfS6lsAAAADUwADaWQyRQAAAIAjRQx+/jmTh6KZhOclyHbVcs6viB/hpl25w+DsjSKj9ZfDxmYyWSlgvKQHVipxQai60Gdrx0psPRXUTP4BYnhsDlotX86ifu9tGKZJobri9FsamNw9sDA3AFNSfi08zygKWIAIYGlUU2AEoRK2U5pdQNx643RK1Ta8y42A4l6ES0UAAACAdxaasAvvdL08qoNaKLE/ehVrItQxBSZ4N6mFTvdGigV/VPeLe3YOC4QcgFUaV384uNVfF2zijrubhx9dP5/6bHakzQKE2oKznmcTVKK1e11kK0Z6ao7NHBwyk8WNQA/+tZ6cDXGGccFfB90smOYSHHdOnABL4W6/mgBy79ns7cpTAAhlbXBsb3llZUUAAACAI0UMfv45k4eimYTnJch21XLOr4gf4aZducPg7I0io/WXw8ZmMlkpYLykB1YqcUGoutBna8dKbD0V1Ez+AWJ4bA5aLV/Oon7vbRimSaG64vRbGpjcPbAwNwBTUn4tPM8oCliACGBpVFNgBKEStlOaXUDceuN0StU2vMuNgOJehEtFAAAAgFiSXU+gnbGGxp6yL/r+6WxiC7yen4FBENOv3z242KzToRobndnxYUUICtUXeIxyNR5kqNZJt7cgA0VFWf8JApppAMKWHnP1CGXGUF5Dggrw95xDJ6EXxpyTaHBppn8kNdBGSoqOItviT4v4TPBUNRNdU7WSD9ypaG1RstqoYdqtUwAIY29tcGFueTFFAAAAgCNFDH7+OZOHopmE5yXIdtVyzq+IH+GmXbnD4OyNIqP1l8PGZjJZKWC8pAdWKnFBqLrQZ2vHSmw9FdRM/gFieGwOWi1fzqJ+720YpkmhuuL0WxqY3D2wMDcAU1J+LTzPKApYgAhgaVRTYAShErZTml1A3HrjdErVNrzLjYDiXoRLRQAAAIB210hH2yKd6ouGfsuQ+lVKskK1A8Z3qkumFGz3LwFfIKUoJzDqvOFX4BIMXbHGlWaJPxSrxbTssyJp30YXpogZHdQq/+2Izd7E9Qki+CWV+YrAJaGRvcVeFhijDu/5nHyDPQgOB+sS4Oapy6zAyughUHDe1iLejLC+Jd7HCkfCkw==\"}");

		// p1.updateBasicInfoDB(2, "Name", "Birth date", "Birth place",
		// "Gender","Nationality", "Address","number");
		// ArrayList<String> bi = p1.readBasicInfoDB(2);
		// System.out.println(bi.toString());
		// System.out.println(p1.getAttrs()[0]+p1.getAttrs()[1]+p1.getAttrs()[2]);
		// p1.getAttributeListDB();
		// System.out.println(p1.getAttrs()[0]+p1.getAttrs()[1]+p1.getAttrs()[2]);
		/*
		 * DBConnection
		 * .update("INSERT INTO sdmproject.policies (id_person, BIWritingPolicy, BIReadingPolicy, BHIWritingPolicy, BHIReadingPolicy, MVWritingPolicy, MVReadingPolicy, MWritingPolicy, MReadingPolicy, HCVWritingPolicy, HCVReadingPolicy) VALUES ("
		 * + p1.getId() + ",'" + p1.policies.getBIWritingPolicy() + "','" +
		 * p1.policies.getBIReadingPolicy() + "','" +
		 * p1.policies.getBHIWritingPolicy() + "','" +
		 * p1.policies.getBHIReadingPolicy() + "','" +
		 * p1.policies.getMVWritingPolicy() + "','" +
		 * p1.policies.getMVReadingPolicy() + "','" +
		 * p1.policies.getMWritingPolicy() + "','" +
		 * p1.policies.getMReadingPolicy() + "','" +
		 * p1.policies.getHCVWritingPolicy() + "','" +
		 * p1.policies.getHCVReadingPolicy() + "')");
		 * 
		 * DBConnection
		 * .update("INSERT INTO sdmproject.policies (id_person, BIWritingPolicy, BIReadingPolicy, BHIWritingPolicy, BHIReadingPolicy, MVWritingPolicy, MVReadingPolicy, MWritingPolicy, MReadingPolicy, HCVWritingPolicy, HCVReadingPolicy) VALUES ("
		 * + p2.getId() + ",'" + p2.policies.getBIWritingPolicy() + "','" +
		 * p2.policies.getBIReadingPolicy() + "','" +
		 * p2.policies.getBHIWritingPolicy() + "','" +
		 * p2.policies.getBHIReadingPolicy() + "','" +
		 * p2.policies.getMVWritingPolicy() + "','" +
		 * p2.policies.getMVReadingPolicy() + "','" +
		 * p2.policies.getMWritingPolicy() + "','" +
		 * p2.policies.getMReadingPolicy() + "','" +
		 * p2.policies.getHCVWritingPolicy() + "','" +
		 * p2.policies.getHCVReadingPolicy() + "')"); DBConnection
		 * .update("INSERT INTO sdmproject.policies (id_person, BIWritingPolicy, BIReadingPolicy, BHIWritingPolicy, BHIReadingPolicy, MVWritingPolicy, MVReadingPolicy, MWritingPolicy, MReadingPolicy, HCVWritingPolicy, HCVReadingPolicy) VALUES ("
		 * + p3.getId() + ",'" + p3.policies.getBIWritingPolicy() + "','" +
		 * p3.policies.getBIReadingPolicy() + "','" +
		 * p3.policies.getBHIWritingPolicy() + "','" +
		 * p3.policies.getBHIReadingPolicy() + "','" +
		 * p3.policies.getMVWritingPolicy() + "','" +
		 * p3.policies.getMVReadingPolicy() + "','" +
		 * p3.policies.getMWritingPolicy() + "','" +
		 * p3.policies.getMReadingPolicy() + "','" +
		 * p3.policies.getHCVWritingPolicy() + "','" +
		 * p3.policies.getHCVReadingPolicy() + "')"); DBConnection
		 * .update("INSERT INTO sdmproject.policies (id_person, BIWritingPolicy, BIReadingPolicy, BHIWritingPolicy, BHIReadingPolicy, MVWritingPolicy, MVReadingPolicy, MWritingPolicy, MReadingPolicy, HCVWritingPolicy, HCVReadingPolicy) VALUES ("
		 * + p4.getId() + ",'" + p4.policies.getBIWritingPolicy() + "','" +
		 * p4.policies.getBIReadingPolicy() + "','" +
		 * p4.policies.getBHIWritingPolicy() + "','" +
		 * p4.policies.getBHIReadingPolicy() + "','" +
		 * p4.policies.getMVWritingPolicy() + "','" +
		 * p4.policies.getMVReadingPolicy() + "','" +
		 * p4.policies.getMWritingPolicy() + "','" +
		 * p4.policies.getMReadingPolicy() + "','" +
		 * p4.policies.getHCVWritingPolicy() + "','" +
		 * p4.policies.getHCVReadingPolicy() + "')"); DBConnection
		 * .update("INSERT INTO sdmproject.policies (id_person, BIWritingPolicy, BIReadingPolicy, BHIWritingPolicy, BHIReadingPolicy, MVWritingPolicy, MVReadingPolicy, MWritingPolicy, MReadingPolicy, HCVWritingPolicy, HCVReadingPolicy) VALUES ("
		 * + p5.getId() + ",'" + p5.policies.getBIWritingPolicy() + "','" +
		 * p5.policies.getBIReadingPolicy() + "','" +
		 * p5.policies.getBHIWritingPolicy() + "','" +
		 * p5.policies.getBHIReadingPolicy() + "','" +
		 * p5.policies.getMVWritingPolicy() + "','" +
		 * p5.policies.getMVReadingPolicy() + "','" +
		 * p5.policies.getMWritingPolicy() + "','" +
		 * p5.policies.getMReadingPolicy() + "','" +
		 * p5.policies.getHCVWritingPolicy() + "','" +
		 * p5.policies.getHCVReadingPolicy() + "')"); DBConnection
		 * .update("INSERT INTO sdmproject.policies (id_person, BIWritingPolicy, BIReadingPolicy, BHIWritingPolicy, BHIReadingPolicy, MVWritingPolicy, MVReadingPolicy, MWritingPolicy, MReadingPolicy, HCVWritingPolicy, HCVReadingPolicy) VALUES ("
		 * + p6.getId() + ",'" + p6.policies.getBIWritingPolicy() + "','" +
		 * p6.policies.getBIReadingPolicy() + "','" +
		 * p6.policies.getBHIWritingPolicy() + "','" +
		 * p6.policies.getBHIReadingPolicy() + "','" +
		 * p6.policies.getMVWritingPolicy() + "','" +
		 * p6.policies.getMVReadingPolicy() + "','" +
		 * p6.policies.getMWritingPolicy() + "','" +
		 * p6.policies.getMReadingPolicy() + "','" +
		 * p6.policies.getHCVWritingPolicy() + "','" +
		 * p6.policies.getHCVReadingPolicy() + "')"); DBConnection
		 * .update("INSERT INTO sdmproject.policies (id_person, BIWritingPolicy, BIReadingPolicy, BHIWritingPolicy, BHIReadingPolicy, MVWritingPolicy, MVReadingPolicy, MWritingPolicy, MReadingPolicy, HCVWritingPolicy, HCVReadingPolicy) VALUES ("
		 * + p7.getId() + ",'" + p7.policies.getBIWritingPolicy() + "','" +
		 * p7.policies.getBIReadingPolicy() + "','" +
		 * p7.policies.getBHIWritingPolicy() + "','" +
		 * p7.policies.getBHIReadingPolicy() + "','" +
		 * p7.policies.getMVWritingPolicy() + "','" +
		 * p7.policies.getMVReadingPolicy() + "','" +
		 * p7.policies.getMWritingPolicy() + "','" +
		 * p7.policies.getMReadingPolicy() + "','" +
		 * p7.policies.getHCVWritingPolicy() + "','" +
		 * p7.policies.getHCVReadingPolicy() + "')"); DBConnection
		 * .update("INSERT INTO sdmproject.policies (id_person, BIWritingPolicy, BIReadingPolicy, BHIWritingPolicy, BHIReadingPolicy, MVWritingPolicy, MVReadingPolicy, MWritingPolicy, MReadingPolicy, HCVWritingPolicy, HCVReadingPolicy) VALUES ("
		 * + p8.getId() + ",'" + p8.policies.getBIWritingPolicy() + "','" +
		 * p8.policies.getBIReadingPolicy() + "','" +
		 * p8.policies.getBHIWritingPolicy() + "','" +
		 * p8.policies.getBHIReadingPolicy() + "','" +
		 * p8.policies.getMVWritingPolicy() + "','" +
		 * p8.policies.getMVReadingPolicy() + "','" +
		 * p8.policies.getMWritingPolicy() + "','" +
		 * p8.policies.getMReadingPolicy() + "','" +
		 * p8.policies.getHCVWritingPolicy() + "','" +
		 * p8.policies.getHCVReadingPolicy() + "')"); DBConnection
		 * .update("INSERT INTO sdmproject.policies (id_person, BIWritingPolicy, BIReadingPolicy, BHIWritingPolicy, BHIReadingPolicy, MVWritingPolicy, MVReadingPolicy, MWritingPolicy, MReadingPolicy, HCVWritingPolicy, HCVReadingPolicy) VALUES ("
		 * + p9.getId() + ",'" + p9.policies.getBIWritingPolicy() + "','" +
		 * p9.policies.getBIReadingPolicy() + "','" +
		 * p9.policies.getBHIWritingPolicy() + "','" +
		 * p9.policies.getBHIReadingPolicy() + "','" +
		 * p9.policies.getMVWritingPolicy() + "','" +
		 * p9.policies.getMVReadingPolicy() + "','" +
		 * p9.policies.getMWritingPolicy() + "','" +
		 * p9.policies.getMReadingPolicy() + "','" +
		 * p9.policies.getHCVWritingPolicy() + "','" +
		 * p9.policies.getHCVReadingPolicy() + "')"); DBConnection
		 * .update("INSERT INTO sdmproject.policies (id_person, BIWritingPolicy, BIReadingPolicy, BHIWritingPolicy, BHIReadingPolicy, MVWritingPolicy, MVReadingPolicy, MWritingPolicy, MReadingPolicy, HCVWritingPolicy, HCVReadingPolicy) VALUES ("
		 * + p10.getId() + ",'" + p10.policies.getBIWritingPolicy() + "','" +
		 * p10.policies.getBIReadingPolicy() + "','" +
		 * p10.policies.getBHIWritingPolicy() + "','" +
		 * p10.policies.getBHIReadingPolicy() + "','" +
		 * p10.policies.getMVWritingPolicy() + "','" +
		 * p10.policies.getMVReadingPolicy() + "','" +
		 * p10.policies.getMWritingPolicy() + "','" +
		 * p10.policies.getMReadingPolicy() + "','" +
		 * p10.policies.getHCVWritingPolicy() + "','" +
		 * p10.policies.getHCVReadingPolicy() + "')"); DBConnection
		 * .update("INSERT INTO sdmproject.policies (id_person, BIWritingPolicy, BIReadingPolicy, BHIWritingPolicy, BHIReadingPolicy, MVWritingPolicy, MVReadingPolicy, MWritingPolicy, MReadingPolicy, HCVWritingPolicy, HCVReadingPolicy) VALUES ("
		 * + p11.getId() + ",'" + p11.policies.getBIWritingPolicy() + "','" +
		 * p11.policies.getBIReadingPolicy() + "','" +
		 * p11.policies.getBHIWritingPolicy() + "','" +
		 * p11.policies.getBHIReadingPolicy() + "','" +
		 * p11.policies.getMVWritingPolicy() + "','" +
		 * p11.policies.getMVReadingPolicy() + "','" +
		 * p11.policies.getMWritingPolicy() + "','" +
		 * p11.policies.getMReadingPolicy() + "','" +
		 * p11.policies.getHCVWritingPolicy() + "','" +
		 * p11.policies.getHCVReadingPolicy() + "')"); DBConnection
		 * .update("INSERT INTO sdmproject.policies (id_person, BIWritingPolicy, BIReadingPolicy, BHIWritingPolicy, BHIReadingPolicy, MVWritingPolicy, MVReadingPolicy, MWritingPolicy, MReadingPolicy, HCVWritingPolicy, HCVReadingPolicy) VALUES ("
		 * + p12.getId() + ",'" + p12.policies.getBIWritingPolicy() + "','" +
		 * p12.policies.getBIReadingPolicy() + "','" +
		 * p12.policies.getBHIWritingPolicy() + "','" +
		 * p12.policies.getBHIReadingPolicy() + "','" +
		 * p12.policies.getMVWritingPolicy() + "','" +
		 * p12.policies.getMVReadingPolicy() + "','" +
		 * p12.policies.getMWritingPolicy() + "','" +
		 * p12.policies.getMReadingPolicy() + "','" +
		 * p12.policies.getHCVWritingPolicy() + "','" +
		 * p12.policies.getHCVReadingPolicy() + "')"); DBConnection
		 * .update("INSERT INTO sdmproject.policies (id_person, BIWritingPolicy, BIReadingPolicy, BHIWritingPolicy, BHIReadingPolicy, MVWritingPolicy, MVReadingPolicy, MWritingPolicy, MReadingPolicy, HCVWritingPolicy, HCVReadingPolicy) VALUES ("
		 * + p13.getId() + ",'" + p13.policies.getBIWritingPolicy() + "','" +
		 * p13.policies.getBIReadingPolicy() + "','" +
		 * p13.policies.getBHIWritingPolicy() + "','" +
		 * p13.policies.getBHIReadingPolicy() + "','" +
		 * p13.policies.getMVWritingPolicy() + "','" +
		 * p13.policies.getMVReadingPolicy() + "','" +
		 * p13.policies.getMWritingPolicy() + "','" +
		 * p13.policies.getMReadingPolicy() + "','" +
		 * p13.policies.getHCVWritingPolicy() + "','" +
		 * p13.policies.getHCVReadingPolicy() + "')"); DBConnection
		 * .update("INSERT INTO sdmproject.policies (id_person, BIWritingPolicy, BIReadingPolicy, BHIWritingPolicy, BHIReadingPolicy, MVWritingPolicy, MVReadingPolicy, MWritingPolicy, MReadingPolicy, HCVWritingPolicy, HCVReadingPolicy) VALUES ("
		 * + p14.getId() + ",'" + p14.policies.getBIWritingPolicy() + "','" +
		 * p14.policies.getBIReadingPolicy() + "','" +
		 * p14.policies.getBHIWritingPolicy() + "','" +
		 * p14.policies.getBHIReadingPolicy() + "','" +
		 * p14.policies.getMVWritingPolicy() + "','" +
		 * p14.policies.getMVReadingPolicy() + "','" +
		 * p14.policies.getMWritingPolicy() + "','" +
		 * p14.policies.getMReadingPolicy() + "','" +
		 * p14.policies.getHCVWritingPolicy() + "','" +
		 * p14.policies.getHCVReadingPolicy() + "')"); DBConnection
		 * .update("INSERT INTO sdmproject.policies (id_person, BIWritingPolicy, BIReadingPolicy, BHIWritingPolicy, BHIReadingPolicy, MVWritingPolicy, MVReadingPolicy, MWritingPolicy, MReadingPolicy, HCVWritingPolicy, HCVReadingPolicy) VALUES ("
		 * + p15.getId() + ",'" + p15.policies.getBIWritingPolicy() + "','" +
		 * p15.policies.getBIReadingPolicy() + "','" +
		 * p15.policies.getBHIWritingPolicy() + "','" +
		 * p15.policies.getBHIReadingPolicy() + "','" +
		 * p15.policies.getMVWritingPolicy() + "','" +
		 * p15.policies.getMVReadingPolicy() + "','" +
		 * p15.policies.getMWritingPolicy() + "','" +
		 * p15.policies.getMReadingPolicy() + "','" +
		 * p15.policies.getHCVWritingPolicy() + "','" +
		 * p15.policies.getHCVReadingPolicy() + "')"); DBConnection
		 * .update("INSERT INTO sdmproject.policies (id_person, BIWritingPolicy, BIReadingPolicy, BHIWritingPolicy, BHIReadingPolicy, MVWritingPolicy, MVReadingPolicy, MWritingPolicy, MReadingPolicy, HCVWritingPolicy, HCVReadingPolicy) VALUES ("
		 * + p16.getId() + ",'" + p16.policies.getBIWritingPolicy() + "','" +
		 * p16.policies.getBIReadingPolicy() + "','" +
		 * p16.policies.getBHIWritingPolicy() + "','" +
		 * p16.policies.getBHIReadingPolicy() + "','" +
		 * p16.policies.getMVWritingPolicy() + "','" +
		 * p16.policies.getMVReadingPolicy() + "','" +
		 * p16.policies.getMWritingPolicy() + "','" +
		 * p16.policies.getMReadingPolicy() + "','" +
		 * p16.policies.getHCVWritingPolicy() + "','" +
		 * p16.policies.getHCVReadingPolicy() + "')"); DBConnection
		 * .update("INSERT INTO sdmproject.policies (id_person, BIWritingPolicy, BIReadingPolicy, BHIWritingPolicy, BHIReadingPolicy, MVWritingPolicy, MVReadingPolicy, MWritingPolicy, MReadingPolicy, HCVWritingPolicy, HCVReadingPolicy) VALUES ("
		 * + p17.getId() + ",'" + p17.policies.getBIWritingPolicy() + "','" +
		 * p17.policies.getBIReadingPolicy() + "','" +
		 * p17.policies.getBHIWritingPolicy() + "','" +
		 * p17.policies.getBHIReadingPolicy() + "','" +
		 * p17.policies.getMVWritingPolicy() + "','" +
		 * p17.policies.getMVReadingPolicy() + "','" +
		 * p17.policies.getMWritingPolicy() + "','" +
		 * p17.policies.getMReadingPolicy() + "','" +
		 * p17.policies.getHCVWritingPolicy() + "','" +
		 * p17.policies.getHCVReadingPolicy() + "')"); DBConnection
		 * .update("INSERT INTO sdmproject.policies (id_person, BIWritingPolicy, BIReadingPolicy, BHIWritingPolicy, BHIReadingPolicy, MVWritingPolicy, MVReadingPolicy, MWritingPolicy, MReadingPolicy, HCVWritingPolicy, HCVReadingPolicy) VALUES ("
		 * + p18.getId() + ",'" + p18.policies.getBIWritingPolicy() + "','" +
		 * p18.policies.getBIReadingPolicy() + "','" +
		 * p18.policies.getBHIWritingPolicy() + "','" +
		 * p18.policies.getBHIReadingPolicy() + "','" +
		 * p18.policies.getMVWritingPolicy() + "','" +
		 * p18.policies.getMVReadingPolicy() + "','" +
		 * p18.policies.getMWritingPolicy() + "','" +
		 * p18.policies.getMReadingPolicy() + "','" +
		 * p18.policies.getHCVWritingPolicy() + "','" +
		 * p18.policies.getHCVReadingPolicy() + "')");
		 */

		
		/*p1.updateBasicInfoDB(1,"Name1", "1992/05/06", "Tours_FR", "Female","French", "A str 2, Enschede", "003363215648");
		p2.updateBasicInfoDB(2,"Name2", "1975/04/30", "Blois_FR", "Male","French", "B str 5, Enschede", "003361548925");
		p3.updateBasicInfoDB(3,"Name3", "1985/12/24", "Lignieres_FR", "Female","French", "C str 1, Enschede", "0033754136859");
		p4.updateBasicInfoDB(4,"Name4", "1979/08/31", "Timisoara_RO", "Male","Romanian", "D str 9, Enschede", "003156954625");
		p5.updateBasicInfoDB(5,"Name5", "1999/04/15", "Arad_RO", "Female","Romanian", "E str 10, Enschede", "005415468295");
		p6.updateBasicInfoDB(6,"Name6", "1994/03/19", "Dublin_IE", "Male","Irish", "F str 65, Enschede", "0031569842");
		p7.updateBasicInfoDB(7,"Name7", "1989/03/01", "Belfast_UK", "Female","Dutch", "G str 15, Enschede", "0048615973325");
		p8.updateBasicInfoDB(8,"Name8", "1979/06/29", "London_UK", "Male","French", "H str 86, Enschede", "00154685265");
		p9.updateBasicInfoDB(9,"Name9", "1983/12/12", "Valencia_SP", "Female","Spanish", "I str 2, Enschede", "001549535452");
		p10.updateBasicInfoDB(10,"Name10", "1985/11/16", "Enschede_NL", "Male","Dutch", "J str 64, Enschede", "0031578952146");
		p11.updateBasicInfoDB(11,"Name11", "1991/12/19", "Utrecht_NL", "Female","Dutch", "K str 95, Enschede", "001349824556");
		p12.updateBasicInfoDB(12,"Name12", "1975/04/30", "Trento_IT", "Male","Italian", "L str 2, Enschede", "00124588635");
		p13.updateBasicInfoDB(13,"Name13", "1985/12/24", "Berlin_D", "Female","German", "M str 4, Enschede", "001548214589982");
		p14.updateBasicInfoDB(14,"Name14", "1979/08/31", "Barcelona_SP", "Male","Dutch", "N str 6, Enschede", "00135424896248");
		p15.updateBasicInfoDB(15,"Name15", "1979/06/29", "Amsterdam_NL","Female", "Dutch", "O str 54, Enschede", "004521688524");
		p16.updateBasicInfoDB(16,"Name16", "1983/12/12", "LosAngeles_US","Male", "Dutch", "P str 98, Enschede", "00457954599");
		p17.updateBasicInfoDB(17,"Name17", "1985/11/16", "Genova_IT", "Female","Italian", "Q str 3, Enschede", "001751465588");
		p18.updateBasicInfoDB(18,"Name18", "1979/08/31", "Rome_IT", "Male","Italian", "R str 2, Enschede", "0016885547995");*/
		
	}

}